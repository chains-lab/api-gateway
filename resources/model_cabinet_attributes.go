/*
Cifra SSO REST API

SSO REST API for Cifra app

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CabinetAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CabinetAttributes{}

// CabinetAttributes struct for CabinetAttributes
type CabinetAttributes struct {
	Profile ProfileAttributes `json:"profile"`
	Biography BiographyAttributes `json:"biography"`
}

type _CabinetAttributes CabinetAttributes

// NewCabinetAttributes instantiates a new CabinetAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCabinetAttributes(profile ProfileAttributes, biography BiographyAttributes) *CabinetAttributes {
	this := CabinetAttributes{}
	this.Profile = profile
	this.Biography = biography
	return &this
}

// NewCabinetAttributesWithDefaults instantiates a new CabinetAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCabinetAttributesWithDefaults() *CabinetAttributes {
	this := CabinetAttributes{}
	return &this
}

// GetProfile returns the Profile field value
func (o *CabinetAttributes) GetProfile() ProfileAttributes {
	if o == nil {
		var ret ProfileAttributes
		return ret
	}

	return o.Profile
}

// GetProfileOk returns a tuple with the Profile field value
// and a boolean to check if the value has been set.
func (o *CabinetAttributes) GetProfileOk() (*ProfileAttributes, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Profile, true
}

// SetProfile sets field value
func (o *CabinetAttributes) SetProfile(v ProfileAttributes) {
	o.Profile = v
}

// GetBiography returns the Biography field value
func (o *CabinetAttributes) GetBiography() BiographyAttributes {
	if o == nil {
		var ret BiographyAttributes
		return ret
	}

	return o.Biography
}

// GetBiographyOk returns a tuple with the Biography field value
// and a boolean to check if the value has been set.
func (o *CabinetAttributes) GetBiographyOk() (*BiographyAttributes, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Biography, true
}

// SetBiography sets field value
func (o *CabinetAttributes) SetBiography(v BiographyAttributes) {
	o.Biography = v
}

func (o CabinetAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CabinetAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["profile"] = o.Profile
	toSerialize["biography"] = o.Biography
	return toSerialize, nil
}

func (o *CabinetAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"profile",
		"biography",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCabinetAttributes := _CabinetAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCabinetAttributes)

	if err != nil {
		return err
	}

	*o = CabinetAttributes(varCabinetAttributes)

	return err
}

type NullableCabinetAttributes struct {
	value *CabinetAttributes
	isSet bool
}

func (v NullableCabinetAttributes) Get() *CabinetAttributes {
	return v.value
}

func (v *NullableCabinetAttributes) Set(val *CabinetAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableCabinetAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableCabinetAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCabinetAttributes(val *CabinetAttributes) *NullableCabinetAttributes {
	return &NullableCabinetAttributes{value: val, isSet: true}
}

func (v NullableCabinetAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCabinetAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


